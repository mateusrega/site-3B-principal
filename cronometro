<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>cronometro</title>
    <style>
      /* Resetando margens e bordas para padronizar o estilo */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Arial', sans-serif;
}

/* Centralizando o conteúdo da página */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #1D1E22;
    color: white;
}

/* Estilo do container principal */
.container {
    text-align: center;
    background-color: #3b3f4a;
    padding: 30px;
    border-radius: 20px;
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3);
}

h1 {
    font-size: 2.5rem;
    margin-bottom: 20px;
}

/* Estilo da exibição do cronômetro */
#cronometro {
    font-size: 3rem;
    margin-bottom: 20px;
    color: #00d8ff;
}

/* Estilo dos botões */
.botoes button {
    padding: 10px 20px;
    margin: 10px;
    font-size: 1.2rem;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

/* Cor do botão iniciar/parar */
#botaoIniciarParar {
    background-color: #00d8ff;
    color: #282c34;
}

/* Cor do botão resetar */
#botaoResetar {
    background-color: #ff4b5c;
    color: white;
}

/* Efeito de hover nos botões */
.botoes button:hover {
    opacity: 0.8;
}

/* Efeito de clique nos botões */
.botoes button:active {
    transform: scale(0.98);
}
    </style>
  </head>

  <body>
    <div class="container">
  <h1>Cronômetro JavaScript</h1>
  <div id="cronometro">00:00:00 000</div>
  <div class="botoes">
    <button id="botaoIniciarParar" onclick="iniciarParar()">Iniciar</button>
    <button id="botaoResetar" onclick="resetar()">Resetar</button>
  </div>
</div>
  </body>
  <script>
    // Variáveis para armazenar o temporizador e o estado do cronômetro
let temporizador;
let emExecucao = false;
let [horas, minutos, segundos, milis] = [0, 0, 0, 0];

// Função que atualiza o display do cronômetro na tela
function atualizarDisplay() {
    document.getElementById('cronometro').textContent =
        `${String(horas).padStart(2, '0')}:${String(minutos).padStart(2, '0')}:${String(segundos).padStart(2, '0')}    ${String(milis).padStart(3, '0')}`;
}

// Função que controla o início e parada do cronômetro
function iniciarParar() {
    if (emExecucao) {
        // Se o cronômetro está em execução, paramos o temporizador
        clearInterval(temporizador);
        document.getElementById('botaoIniciarParar').textContent = 'Iniciar';
    } else {
        // Caso contrário, iniciamos o temporizador para incrementar os segundos a cada segundo
        temporizador = setInterval(() => {
          
            milis++;
          if (milis === 1000){
            milis = 0;
            segundos++;
          }
            if (segundos === 60) {
                segundos = 0;
                minutos++;
                if (minutos === 60) {
                    minutos = 0;
                    horas++;
                }
            }
            atualizarDisplay ();}, );
        document.getElementById('botaoIniciarParar').textContent = 'Parar';
    }
    emExecucao = !emExecucao; // Alterna o estado do cronômetro (executando/parado)
}

// Função que reseta o cronômetro para o valor inicial 00:00:00
function resetar() {
    clearInterval(temporizador); // Para o temporizador
    [horas, minutos, segundos, milis] = [0, 0, 0, 0]; // Reseta os valores
    atualizarDisplay(); // Atualiza o display com os valores zerados
    document.getElementById('botaoIniciarParar').textContent = 'Iniciar';
    emExecucao = false; // Define o estado como parado
}
  
  </script>
</html>
